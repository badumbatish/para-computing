# -*- makefile -*-
################################################################
################################################################
####
#### This makefile is part of the source of 
#### "Parallel Programming in MPI and OpenMP"
#### by Victor Eijkhout, copyright 2013-2020
####
#### include Makefile for course slides MPI/OpenMP/hybrid and lab sessions
#### this is invoked from the slides-{mpi,omp,ddt,hybrid} directories
####
################################################################
################################################################

ENGINE = pdflatex -shell-escape
course ::
	@make --no-print-directory FILE=${COURSE} upload
nocourse :
	@if [ ! -z "${EXTRAFILES}" ] ; then \
	    for f in  ${EXTRAFILES} ; do \
	        make --no-print-directory $${f%%.pdf}.pdf \
	        && make --no-print-directory upload  FILE=$${f%%.pdf} \
	        ; done \
	    ; fi

.PHONY: listextra extrafiles
listextra :
	@echo ${EXTRAFILES}
extrafiles :
	@for f in `make --no-print-directory listextra` ; do \
	    make --no-print-directory onepass FILE=$${f%%.pdf} \
	    ; done

.PHONY: extract
info ::
	@echo "make extract : rename cut files to something more meaningful"
extract :
	@echo "Extracting cut files" \
	&& for e in *.cut ; do \
	  if [ `cat $$e | grep label | wc -l` -eq 1 ] ; then \
	    export nam=`cat $$e | grep label | sed -e s/^.*label.// -e s/\}//` ; \
	    cp $$e ../../snippets/$$nam.tex ; \
	  fi ; \
	done

info ::
	@echo "make handout"
.PHONY: handout
handout :
	@export handout=${COURSE}_handout \
	&& if [ ! -f $${handout}.tex ] ; then \
	       echo "No file <<$${handout}.tex>>" && exit 1 \
	       ; \
	   else \
	       make onepass FILE=$${handout} \
	       ; \
	   fi

##
## Victor only: uploading
##
info ::
	@if [ `whoami` = "eijkhout" ] ; then echo "make upload [ FILE=... ]" ; fi
.PHONY: upload
upload ::
	@export course=${FILE} && export course=$${course%%.tex} \
	 && export course=$${course%%_course} && export file=$${course}_course \
	 && echo "uploading course: $${file}" \
	 && if [ -d "${HOME}/Dropbox" ] ; then \
	      echo " .. to dropbox" \
	      && cp $${file}.pdf ${HOME}/Dropbox/Scicomp/Courses/ \
	   ; fi \
	 && if [ -d "../../../pdf/pcse" ] ; then \
	      echo " .. to pdfs" \
	      && cp $${file}.pdf ../../../pdf/pcse \
	    ; fi 

#
# Cleaning
#
info ::
	@echo "make clean"
.PHONY: clean
clean ::
	@/bin/rm -f *~ *.{aux,blg,idx,ilg,ind,log,nav,out,snm,toc,vrb} \
	    acronyms.tex *.cut
