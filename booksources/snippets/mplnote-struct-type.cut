  One could describe the MPI struct type as a collection of
  displacements, to be applied to any set of items that conforms
  to the specifications.
  An \ac{MPL} \indexmplshow{heterogeneous_layout} on the other hand,
  incorporates the actual data. Thus you could write
\begin{lstlisting}
int i; float x; double z;
heterogeneous_layout l( i,x,z );
comm.send( l /* sort of */, receiver );
\end{lstlisting}
More complicated data than scalars takes more work:
%
\cxxverbatimsnippet[examples/mpi/mpl/struct.cxx]{structurempl}
%]
Here, the \indexmplshow{absolute} indicates the lack of an implicit buffer:
the layout is absolute rather than a relative description.
Note also the \indexmplshow{make_absolute}.
