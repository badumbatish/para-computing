// persist.c
if (procno==src) {
  MPI_Send_init
    (send,s,MPI_DOUBLE,tgt,0,comm,requests+0);
  MPI_Recv_init
    (recv,s,MPI_DOUBLE,tgt,0,comm,requests+1);
  for (int n=0; n<NEXPERIMENTS; n++) {
    fill_buffer(send,s,n);
    MPI_Startall(2,requests);
    MPI_Waitall(2,requests,MPI_STATUSES_IGNORE);
    int r = chck_buffer(send,s,n);
    if (!r) printf("buffer problem %d\n",s);
  }
  MPI_Request_free(requests+0);
  MPI_Request_free(requests+1);
} else if (procno==tgt) {
  for (int n=0; n<NEXPERIMENTS; n++) {
    MPI_Recv(recv,s,MPI_DOUBLE,src,0,
            comm,MPI_STATUS_IGNORE);
    MPI_Send(recv,s,MPI_DOUBLE,src,0,
             comm);
  }
}
